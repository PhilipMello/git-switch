#!/usr/bin/env bash
# Author
author="Philip Mello <@Microsoft>"
# Version
version="1.1"
# License
license="MIT"
# Date
current_date=$(date +'%b %d, %Y')
# GitHub
github='https://github.com/PhilipMello/git-switch'

script="GitHub Account Switch"
description="2 Github Accounts into one CLI"

echo "
        _____         _ _       _     
       / ____|       (_) |     | |      $version
  __ _| (_____      ___| |_ ___| |__    $current_date
 / _. |\___ \ \ /\ / / | __/ __| |_ \   $author
| (_| |____) \ V  V /| | || (__| | | |  $license
 \___ |_____/ \_/\_/ |_|\__\___|_| |_|
  __/ |                               
 |___/  $github                            

# --------------------------------------------------------------
# Script     : $script
# Description: $description
# --------------------------------------------------------------
# How to use: Execute gswitch
# Exemples:
# Manual: gswitch -h OR gswitch --h OR gswitch --help
# Switch account using parameter: gswitch --account1
# --------------------------------------------------------------
"
WHITE=""
BLUE="\033[97;104m"
YELLOW="\033[97;103m"
CYAN="\033[97;106m"
MAGENTA="\033[97;45m"
GREEN="\033[97;102m"
RED="\033[97;41m"
ENDCOLOR="\e[0m"

function github_generate_sshkey() {
    # Generate SSH Key
    echo "Go to your GitHub Portal and add your SSH Key
    'https://github.com/settings/ssh/new'
    "
    echo "Choose an option:"
    echo "1. Generate SSH Key for single account"
    echo "2. Generate SSH Key for 2 accounts"
    read option

    case $option in
    1)
        read -p "Type your github email account": github_email_account
        ssh-keygen -t ed25519 -C "$github_email_account"
        echo -e "
        +-----------------------------------------------------------+
        |${GREEN}SSH key successfuly generated${ENDCOLOR}
        +-----------------------------------------------------------+
        "
        cat ~/.ssh/id_ed25519.pub
        ;;
    2)
        read -p "Type your github email account1": github_email_account1
        ssh-keygen -t ed25519 -C "$github_email_account1" -f ~/.ssh/id_ed25519_account1
        read -p "Type your github email account2": github_email_account2
        ssh-keygen -t ed25519 -C "$github_email_account2" -f ~/.ssh/id_ed25519_account2
        echo -e "
        +-----------------------------------------------------------+
        |${GREEN}SSH key successfuly generated${ENDCOLOR}
        +-----------------------------------------------------------+
        "
        cat ~/.ssh/id_ed25519_account1.pub
        cat ~/.ssh/id_ed25519_account2.pub
        ;;
    esac
}

function github_connection_test() {
    # Github test connection
    echo "Github connection testing..."
    ssh -T git@github.com
}

function github_set_account() {
    # Github set account
    read -p "Enter your Github Account Name": github_set_account_name
    read -p "Enter your Github Account Email": github_set_account_email
    git config user.name "$github_set_account_name"
    git config user.email "$github_set_account_email"
}

function github_account_switch() {
    # Github Account Switch (2 Accounts)
    github_account1=$(cat ~/.ssh/id_ed25519_account1.pub | grep -E -o "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}\b")
    github_account2=$(cat ~/.ssh/id_ed25519_account2.pub | grep -E -o "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}\b")
    echo -e "You're logged in as:\n"
    ssh -T git@github.com
    echo "Choose an option:"
    echo "1. Switch to Account: $github_account1"
    echo "2. Switch to Account: $github_account2"
    read option

    case $option in
    1)
        cp ~/.ssh/id_ed25519_account1 ~/.ssh/id_ed25519
        cp ~/.ssh/id_ed25519_account1.pub ~/.ssh/id_ed25519.pub
        echo -e "Github Account #1 Selected!\n"
        ssh -T git@github.com
        ;;
    2)
        cp ~/.ssh/id_ed25519_account2 ~/.ssh/id_ed25519
        cp ~/.ssh/id_ed25519_account2.pub ~/.ssh/id_ed25519.pub
        echo -e "Github Account #2 Selected!\n"
        ssh -T git@github.com
        ;;
    *)
        echo "Invalid option. Please select 1 or 2."
        ;;
esac
}

function github_fix_permissions() {
    # Git fix files permissions
    echo "Fixing SSH file permissions..."
    chown $USER:$USER -R  ~/.ssh
    chmod 700  ~/.ssh/
    chmod 600  ~/.ssh/id_ed25519_account1
    chmod 600  ~/.ssh/id_ed25519_account1.pub
    chmod 600  ~/.ssh/id_ed25519_account2
    chmod 600  ~/.ssh/id_ed25519_account2.pub
    echo -e "
    +-----------------------------------------------------------+
    |${GREEN}Files permissions has been fixed${ENDCOLOR}
    +-----------------------------------------------------------+
    "
}

# <-- Manual - BEGIN
manual() {
    echo "Generate 2 SSH Keys and rename Github account to
    id_ed25519_account1 and Github account 2 to id_ed25519_account2
    in ~/.ssh
    "
    echo -e "Parameters:
    --account1          Switch to GitHub Account 1
    --account2          Switch to GitHub Account 2
    "
    exit 0
}

# Manual - END -->

if [[ $1 == "-h" || $1 == "--help" || $1 == "--h" ]]; then
    manual
    exit 1
elif [[ $1 == "--account1" ]]; then
    cp ~/.ssh/id_ed25519_account1 ~/.ssh/id_ed25519
    cp ~/.ssh/id_ed25519_account1.pub ~/.ssh/id_ed25519.pub
    echo -e "Github Account #1 has been selected!\n"
    ssh -T git@github.com
    exit 0
elif [[ $1 == "--account2" ]]; then
    cp ~/.ssh/id_ed25519_account2 ~/.ssh/id_ed25519
    cp ~/.ssh/id_ed25519_account2.pub ~/.ssh/id_ed25519.pub
    echo -e "Github Account #2 has been selected!\n"
    ssh -T git@github.com
    exit 0
fi

echo "Choose an option:"
echo "1. Switch GitHub Account"
echo "2. Generate SSH Key"
echo "3. Test Github SSH connection"
echo "4. Set Github account"
echo "5. Fix SSH file permissions"
read option

case $option in
    1)
        github_account_switch
        ;;
    2)  
        github_generate_sshkey
        ;;
    3)
        github_connection_test
        ;;
    4)
        github_set_account
        ;;
    5)
        github_fix_permissions
        ;;
    *)
        echo "Invalid option"
        ;;
esac